{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport OrderService from \"@/services/OrderService\";\nimport { io } from 'socket.io-client';\nimport NotificationService from \"@/services/NotificationService\";\nimport JQuery from 'jquery';\nwindow.$ = JQuery; // import JQuery from 'jquery'\n// window.$ = JQuery\n\nexport default {\n  name: \"Commande-list\",\n  data: function data() {\n    return {\n      Orders: [],\n      currentTutorial: null,\n      currentIndex: -1,\n      title: \"\"\n    };\n  },\n  methods: {\n    retrieveOrders: function retrieveOrders() {\n      var _this = this;\n\n      OrderService.getAll().then(function (response) {\n        _this.Orders = response.data;\n        console.log(response.data);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    realtimeOrder: function realtimeOrder() {\n      this.socket.on('connect', connectUser);\n      var sio = this.socket;\n\n      function connectUser() {\n        // Called whenever a user signs in\n        var userId = 50; // Retrieve userId\n\n        if (!userId) return;\n        sio.emit('userConnected', userId);\n      }\n\n      var sio = this.socket;\n      sio.on('getcommandesatut', function (data) {\n        console.log(data);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.retrieveOrders();\n    this.realtimeOrder();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;AACA;AACAA,kB,CACA;AACA;;AAEA;EACAC,qBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,UADA;MAEAC,qBAFA;MAGAC,gBAHA;MAIAC;IAJA;EAMA,CATA;EAUAC;IACAC,cADA,4BACA;MAAA;;MACAC,sBACAC,IADA,CACA;QACA;QACAC;MACA,CAJA,EAKAC,KALA,CAKA;QACAD;MACA,CAPA;IAQA,CAVA;IAWAE,aAXA,2BAWA;MACA;MACA;;MACA;QAAA;QACA,gBADA,CACA;;QACA;QACAC;MACA;;MACA;MACAA;QACAH;MACA,CAFA;IAIA;EAxBA,CAVA;EAoCAI,OApCA,qBAoCA;IACA;IACA;EACA;AAvCA","names":["window","name","data","Orders","currentTutorial","currentIndex","title","methods","retrieveOrders","OrderService","then","console","catch","realtimeOrder","sio","mounted"],"sourceRoot":"src/components/ManagerComponents","sources":["CommandeList.vue"],"sourcesContent":["<template>\r\n    <div style=\"padding-top: 150px;\">\r\n    <h1 style=\"font-weight: 700;color:black;box-shadow: rgba(0, 0, 0.70, 0.35) 0px 5px 15px;\">Commandes des clients</h1>\r\n        <div class=\"container mt-2\" style=\"box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\">\r\n            <table class=\"table bg-light\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\"># Numéro Commande</th>\r\n                    <th scope=\"col\">Product</th>\r\n                    <th scope=\"col\">Client</th>\r\n                    <th scope=\"col\">Restaurant</th>\r\n                    <th scope=\"col\">Livreur</th>\r\n                    <th scope=\"col\">Statut</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr :class=\"{ active: index == currentIndex }\"\r\n          v-for=\"(Order, index) in Orders\"\r\n          :key=\"index\">\r\n                    <td>{{Order._id}}</td>\r\n                      <td>\r\n                        <ul class=\"{ active: index == currentIndex }\"\r\n                        v-for=\"(id_article, index) in Order.ids_article\"\r\n                        :key=\"index\" >\r\n                          <li>{{id_article}}</li>\r\n                        </ul>\r\n                      </td>\r\n                    <td>{{Order.id_client}}</td>\r\n                    <td>{{Order.id_restaurant}}</td>\r\n                    <td>{{Order.id_livreur}}</td>\r\n                    <td>\r\n                      <li v-if=\"Order.statut_livreur == 0\" class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      En Attente\r\n                      <span class=\"badge badge-primary badge-pill\"><i class=\"bi h4 bi-dot\"></i></span>\r\n                      </li>\r\n                       <li v-if=\"Order.statut_livreur == 1\" class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                        Prise en Charge\r\n                      <span class=\"badge badge-primary badge-pill\"><i class=\"bi h4 bi-dot\"></i></span>\r\n                      </li>\r\n                      <li v-if=\"Order.statut_livreur == 2\" class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                        Livrée\r\n                      <span class=\"badge badge-success badge-pill\"><i class=\"bi h4 bi-dot\"></i></span>\r\n                      </li>\r\n                    </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>    \r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport OrderService from \"@/services/OrderService\";\r\nimport { io } from 'socket.io-client';\r\nimport NotificationService from \"@/services/NotificationService\";\r\nimport JQuery from 'jquery';\r\nwindow.$ = JQuery\r\n// import JQuery from 'jquery'\r\n// window.$ = JQuery\r\n\r\nexport default {\r\n  name: \"Commande-list\",\r\n  data() {\r\n    return {\r\n      Orders: [],\r\n      currentTutorial: null,\r\n      currentIndex: -1,\r\n      title: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    retrieveOrders() {\r\n        OrderService.getAll()\r\n        .then(response => {\r\n            this.Orders = response.data ;\r\n            console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    },\r\n    realtimeOrder(){\r\n        this.socket.on('connect', connectUser);\r\n        var sio = this.socket;\r\n        function connectUser () {  // Called whenever a user signs in\r\n        var userId = 50 // Retrieve userId\r\n        if (!userId) return;\r\n        sio.emit('userConnected',  userId);\r\n      }\r\n      var sio = this.socket;\r\n        sio.on('getcommandesatut',function(data){\r\n            console.log(data);\r\n        });\r\n\r\n    }\r\n        },\r\n  mounted() {\r\n    this.retrieveOrders();\r\n    this.realtimeOrder();\r\n  }\r\n};\r\n</script>\r\n<style>\r\n  @import '@/assets/css/Restaurateur.css';\r\n</style>"]},"metadata":{},"sourceType":"module"}