{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport OrderService from \"@/services/OrderService\";\nimport { io } from 'socket.io-client';\nimport JQuery from 'jquery';\nwindow.$ = JQuery;\nexport default {\n  name: \"Commande-list\",\n  data: function data() {\n    return {\n      Orders: [],\n      currentTutorial: null,\n      currentIndex: -1,\n      title: \"\",\n      socket: io('http://localhost:4000', {\n        transports: ['websocket', 'polling', 'flashsocket']\n      })\n    };\n  },\n  methods: {\n    retrieveOrders: function retrieveOrders() {\n      var _this = this;\n\n      OrderService.getAcceptedRestaurantOrder(1).then(function (response) {\n        _this.Orders = response.data;\n        console.log(response.data);\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    DropOrder: function DropOrder(id) {\n      var _this2 = this;\n\n      OrderService.delete(id).then(function (response) {\n        console.log(response.data);\n\n        _this2.$router.go();\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    AcceptOrder: function AcceptOrder(id) {\n      var _this3 = this;\n\n      var data = {\n        state: 1,\n        id_livreur: 'testidlivreur'\n      };\n      OrderService.updateStateLivreurOrder(id, data).then(function (response) {\n        console.log(response.data);\n        sio.emit('realtimemanagercommande', {\n          statut_livreur: 1\n        });\n\n        _this3.$router.go();\n      }).catch(function (e) {\n        console.log(e);\n      });\n    },\n    AcquitOrder: function AcquitOrder(id) {\n      var _this4 = this;\n\n      var data = {\n        state: 2\n      };\n      OrderService.updateStateLivreurOrder(id, data).then(function (response) {\n        console.log(response.data);\n\n        _this4.$router.go();\n\n        sio.emit('realtimemanagercommande', {\n          statut_livreur: 1\n        });\n      }).catch(function (e) {\n        console.log(e);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.retrieveOrders();\n    this.socket.on('connect', connectUser);\n    var sio = this.socket;\n\n    function connectUser() {\n      // Called whenever a user signs in\n      var userId = 20; // Retrieve userId\n\n      if (!userId) return;\n      sio.emit('userConnected', userId);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA;AACAA;AAEA;EACAC,qBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,UADA;MAEAC,qBAFA;MAGAC,gBAHA;MAIAC,SAJA;MAKAC;QAAAC;MAAA;IALA;EAOA,CAVA;EAWAC;IACAC,cADA,4BACA;MAAA;;MACAC,2CACAC,IADA,CACA;QACA;QACAC;MACA,CAJA,EAKAC,KALA,CAKA;QACAD;MACA,CAPA;IAQA,CAVA;IAWAE,SAXA,qBAWAC,EAXA,EAWA;MAAA;;MACAL,wBACAC,IADA,CACA;QACAC;;QACA;MACA,CAJA,EAKAC,KALA,CAKA;QACAD;MACA,CAPA;IAQA,CApBA;IAqBAI,WArBA,uBAqBAD,EArBA,EAqBA;MAAA;;MACA;QACAE,QADA;QAEAC;MAFA;MAIAR,+CACAC,IADA,CACA;QACAC;QACAO;UACAC;QADA;;QAGA;MACA,CAPA,EAQAP,KARA,CAQA;QACAD;MACA,CAVA;IAWA,CArCA;IAsCAS,WAtCA,uBAsCAN,EAtCA,EAsCA;MAAA;;MACA;QACAE;MADA;MAGAP,+CACAC,IADA,CACA;QACAC;;QACA;;QACAO;UACAC;QADA;MAGA,CAPA,EAQAP,KARA,CAQA;QACAD;MACA,CAVA;IAWA;EArDA,CAXA;EAkEAU,OAlEA,qBAkEA;IACA;IACA;IACA;;IACA;MAAA;MACA,gBADA,CACA;;MACA;MACAH;IACA;EACA;AA3EA","names":["window","name","data","Orders","currentTutorial","currentIndex","title","socket","transports","methods","retrieveOrders","OrderService","then","console","catch","DropOrder","id","AcceptOrder","state","id_livreur","sio","statut_livreur","AcquitOrder","mounted"],"sourceRoot":"src/components/LivreurComponents","sources":["CommandeList.vue"],"sourcesContent":["<template>\r\n    <div style=\"padding-top: 150px;\">\r\n    <h1 style=\"font-weight: 700;color:black;box-shadow: rgba(0, 0, 0.70, 0.35) 0px 5px 15px;\">Commandes des clients</h1>\r\n        <div class=\"container mt-2\" style=\"box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\">\r\n            <table class=\"table bg-light\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\"># Numéro Commande</th>\r\n                    <th scope=\"col\">Product</th>\r\n                    <th scope=\"col\">Client</th>\r\n                    <th scope=\"col\">Restaurant</th>\r\n                    <th scope=\"col\">Action</th>\r\n                    <th scope=\"col\">Statut</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr :class=\"{ active: index == currentIndex }\"\r\n          v-for=\"(Order, index) in Orders\"\r\n          :key=\"index\">\r\n                    <td>{{Order._id}}</td>\r\n                      <td>\r\n                        <ul class=\"{ active: index == currentIndex }\"\r\n                        v-for=\"(id_article, index) in Order.ids_article\"\r\n                        :key=\"index\" >\r\n                          <li>{{id_article}}</li>\r\n                        </ul>\r\n                      </td>\r\n                    <td>{{Order.id_client}}</td>\r\n                    <td>{{Order.id_livreur}}</td>\r\n                      <td>\r\n                        <ul class=\"list-group\"> \r\n                          <li class=\"list-group-item\">\r\n                            <button  @click=\"DropOrder(Order._id)\" class=\"btn btn-sm btn-danger\"> Delete </button>\r\n                          </li>\r\n                          <li v-if=\"Order.statut_livreur == 0\" class=\"list-group-item\">\r\n                            <button @click=\"AcceptOrder(Order._id)\"  class=\"btn btn-sm btn-success\"> Prendre en charge </button>\r\n                          </li>\r\n                          <li v-if=\"Order.statut_livreur == 1 && Order.id_livreur =='testidlivreur'\" class=\"list-group-item\">\r\n                            <button  @click=\"AcquitOrder(Order._id)\" class=\"btn btn-sm btn-success\"> Acquitter  </button>\r\n                          </li>\r\n                          <li v-if=\"Order.statut_livreur == 1 && Order.id_livreur != 'testidlivreur'\" class=\"list-group-item\">\r\n                            <button disabled  class=\"btn btn-sm btn-secondary\"> Prise En Charge </button>\r\n                          </li>\r\n                        </ul>\r\n\r\n                      </td>\r\n                    <td>\r\n                      <li v-if=\"Order.statut_livreur == 0\" class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      En Attente\r\n                      <span class=\"badge badge-primary badge-pill\"><i class=\"bi h4 bi-dot\"></i></span>\r\n                      </li>\r\n                       <li v-if=\"Order.statut_livreur == 1\" class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                        Prise en Charge\r\n                      <span class=\"badge badge-primary badge-pill\"><i class=\"bi h4 bi-dot\"></i></span>\r\n                      </li>\r\n                      <li v-if=\"Order.statut_livreur == 2\" class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                        Livrée\r\n                      <span class=\"badge badge-success badge-pill\"><i class=\"bi h4 bi-dot\"></i></span>\r\n                      </li>\r\n                    </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>    \r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport OrderService from \"@/services/OrderService\";\r\nimport { io } from 'socket.io-client';\r\nimport JQuery from 'jquery'\r\nwindow.$ = JQuery\r\n\r\nexport default {\r\n  name: \"Commande-list\",\r\n  data() {\r\n    return {\r\n      Orders: [],\r\n      currentTutorial: null,\r\n      currentIndex: -1,\r\n      title: \"\",\r\n       socket : io('http://localhost:4000', { transports: ['websocket', 'polling', 'flashsocket']}),\r\n    };\r\n  },\r\n  methods: {\r\n    retrieveOrders() {\r\n        OrderService.getAcceptedRestaurantOrder(1)\r\n        .then(response => {\r\n            this.Orders = response.data ;\r\n            console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    },\r\n    DropOrder(id){\r\n      OrderService.delete(id)\r\n      .then(response => {\r\n            console.log(response.data);\r\n            this.$router.go();\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    },\r\n  AcceptOrder(id){\r\n    var data = {\r\n        state : 1,\r\n        id_livreur : 'testidlivreur'\r\n      };\r\n    OrderService.updateStateLivreurOrder(id,data)\r\n    .then(response => {\r\n            console.log(response.data);\r\n            sio.emit('realtimemanagercommande',{\r\n                statut_livreur : 1,\r\n              });\r\n            this.$router.go();\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n  },\r\n  AcquitOrder(id){\r\n    var data = {\r\n        state : 2,\r\n      };\r\n    OrderService.updateStateLivreurOrder(id,data)\r\n    .then(response => {\r\n            console.log(response.data);\r\n            this.$router.go();\r\n            sio.emit('realtimemanagercommande',{\r\n                statut_livreur : 1,\r\n              });\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    }\r\n          },\r\n  mounted() {\r\n    this.retrieveOrders();\r\n    this.socket.on('connect', connectUser);\r\n        var sio = this.socket;\r\n        function connectUser () {  // Called whenever a user signs in\r\n        var userId = 20 // Retrieve userId\r\n        if (!userId) return;\r\n        sio.emit('userConnected',  userId);\r\n      }\r\n  }\r\n};\r\n</script>\r\n<style>\r\n  @import '@/assets/css/Restaurateur.css';\r\n</style>"]},"metadata":{},"sourceType":"module"}