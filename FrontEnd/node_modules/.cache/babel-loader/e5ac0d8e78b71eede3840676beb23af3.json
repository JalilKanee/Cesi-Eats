{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.number.constructor.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"pagination\",\n  props: {\n    type: {\n      type: String,\n      default: \"primary\",\n      validator: function validator(value) {\n        return [\"default\", \"primary\", \"danger\", \"success\", \"warning\", \"info\", \"rose\"].includes(value);\n      }\n    },\n    withText: Boolean,\n    noArrows: Boolean,\n    pageCount: {\n      type: Number,\n      default: 0\n    },\n    perPage: {\n      type: Number,\n      default: 10\n    },\n    total: {\n      type: Number,\n      default: 0\n    },\n    value: {\n      type: Number,\n      default: 1\n    }\n  },\n  computed: {\n    paginationClass: function paginationClass() {\n      return \"pagination-\".concat(this.type);\n    },\n    totalPages: function totalPages() {\n      if (this.pageCount > 0) return this.pageCount;\n\n      if (this.total > 0) {\n        return Math.ceil(this.total / this.perPage);\n      }\n\n      return 1;\n    },\n    pagesToDisplay: function pagesToDisplay() {\n      if (this.totalPages > 0 && this.totalPages < this.defaultPagesToDisplay) {\n        return this.totalPages;\n      }\n\n      return this.defaultPagesToDisplay;\n    },\n    minPage: function minPage() {\n      if (this.value >= this.pagesToDisplay) {\n        var pagesToAdd = Math.floor(this.pagesToDisplay / 2);\n        var newMaxPage = pagesToAdd + this.value;\n\n        if (newMaxPage > this.totalPages) {\n          return this.totalPages - this.pagesToDisplay + 1;\n        }\n\n        return this.value - pagesToAdd;\n      } else {\n        return 1;\n      }\n    },\n    maxPage: function maxPage() {\n      if (this.value >= this.pagesToDisplay) {\n        var pagesToAdd = Math.floor(this.pagesToDisplay / 2);\n        var newMaxPage = pagesToAdd + this.value;\n\n        if (newMaxPage < this.totalPages) {\n          return newMaxPage;\n        } else {\n          return this.totalPages;\n        }\n      } else {\n        return this.pagesToDisplay;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      defaultPagesToDisplay: 5\n    };\n  },\n  methods: {\n    range: function range(min, max) {\n      var arr = [];\n\n      for (var i = min; i <= max; i++) {\n        arr.push(i);\n      }\n\n      return arr;\n    },\n    changePage: function changePage(item) {\n      this.$emit(\"input\", item);\n    },\n    nextPage: function nextPage() {\n      if (this.value < this.totalPages) {\n        this.$emit(\"input\", this.value + 1);\n      }\n    },\n    prevPage: function prevPage() {\n      if (this.value > 1) {\n        this.$emit(\"input\", this.value - 1);\n      }\n    }\n  },\n  watch: {\n    perPage: function perPage() {\n      this.$emit(\"input\", 1);\n    },\n    total: function total() {\n      this.$emit(\"input\", 1);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;EACAA,kBADA;EAEAC;IACAC;MACAA,YADA;MAEAC,kBAFA;MAGAC;QACA,QACA,SADA,EAEA,SAFA,EAGA,QAHA,EAIA,SAJA,EAKA,SALA,EAMA,MANA,EAOA,MAPA,EAQAC,QARA,CAQAC,KARA;MASA;IAbA,CADA;IAgBAC,iBAhBA;IAiBAC,iBAjBA;IAkBAC;MACAP,YADA;MAEAC;IAFA,CAlBA;IAsBAO;MACAR,YADA;MAEAC;IAFA,CAtBA;IA0BAQ;MACAT,YADA;MAEAC;IAFA,CA1BA;IA8BAG;MACAJ,YADA;MAEAC;IAFA;EA9BA,CAFA;EAqCAS;IACAC,eADA,6BACA;MACA;IACA,CAHA;IAIAC,UAJA,wBAIA;MACA;;MACA;QACA;MACA;;MACA;IACA,CAVA;IAWAC,cAXA,4BAWA;MACA;QACA;MACA;;MACA;IACA,CAhBA;IAiBAC,OAjBA,qBAiBA;MACA;QACA;QACA;;QACA;UACA;QACA;;QACA;MACA,CAPA,MAOA;QACA;MACA;IACA,CA5BA;IA6BAC,OA7BA,qBA6BA;MACA;QACA;QACA;;QACA;UACA;QACA,CAFA,MAEA;UACA;QACA;MACA,CARA,MAQA;QACA;MACA;IACA;EAzCA,CArCA;EAgFAC,IAhFA,kBAgFA;IACA;MACAC;IADA;EAGA,CApFA;EAqFAC;IACAC,KADA,iBACAC,GADA,EACAC,GADA,EACA;MACA;;MACA;QACAC;MACA;;MACA;IACA,CAPA;IAQAC,UARA,sBAQAC,IARA,EAQA;MACA;IACA,CAVA;IAWAC,QAXA,sBAWA;MACA;QACA;MACA;IACA,CAfA;IAgBAC,QAhBA,sBAgBA;MACA;QACA;MACA;IACA;EApBA,CArFA;EA2GAC;IACAnB,OADA,qBACA;MACA;IACA,CAHA;IAIAC,KAJA,mBAIA;MACA;IACA;EANA;AA3GA","names":["name","props","type","default","validator","includes","value","withText","noArrows","pageCount","perPage","total","computed","paginationClass","totalPages","pagesToDisplay","minPage","maxPage","data","defaultPagesToDisplay","methods","range","min","max","arr","changePage","item","nextPage","prevPage","watch"],"sourceRoot":"src/components","sources":["Pagination.vue"],"sourcesContent":["<template>\n  <ul class=\"pagination\" :class=\"paginationClass\">\n    <li\n      class=\"page-item prev-page\"\n      :class=\"{ disabled: value === 1, 'no-arrows': noArrows }\"\n    >\n      <a class=\"page-link\" aria-label=\"Previous\" @click=\"prevPage\">\n        <template v-if=\"withText\">Prev</template>\n        <i class=\"fas fa-angle-double-left\" v-else></i>\n      </a>\n    </li>\n    <li\n      class=\"page-item\"\n      v-for=\"item in range(minPage, maxPage)\"\n      :key=\"item\"\n      :class=\"{ active: value === item }\"\n    >\n      <a class=\"page-link\" @click=\"changePage(item)\">{{ item }}</a>\n    </li>\n    <li\n      class=\"page-item page-pre next-page\"\n      :class=\"{ disabled: value === totalPages, 'no-arrows': noArrows }\"\n    >\n      <a class=\"page-link\" aria-label=\"Next\" @click=\"nextPage\">\n        <template v-if=\"withText\">Next</template>\n        <i class=\"fas fa-angle-double-right\" v-else></i>\n      </a>\n    </li>\n  </ul>\n</template>\n<script>\nexport default {\n  name: \"pagination\",\n  props: {\n    type: {\n      type: String,\n      default: \"primary\",\n      validator: value => {\n        return [\n          \"default\",\n          \"primary\",\n          \"danger\",\n          \"success\",\n          \"warning\",\n          \"info\",\n          \"rose\"\n        ].includes(value);\n      }\n    },\n    withText: Boolean,\n    noArrows: Boolean,\n    pageCount: {\n      type: Number,\n      default: 0\n    },\n    perPage: {\n      type: Number,\n      default: 10\n    },\n    total: {\n      type: Number,\n      default: 0\n    },\n    value: {\n      type: Number,\n      default: 1\n    }\n  },\n  computed: {\n    paginationClass() {\n      return `pagination-${this.type}`;\n    },\n    totalPages() {\n      if (this.pageCount > 0) return this.pageCount;\n      if (this.total > 0) {\n        return Math.ceil(this.total / this.perPage);\n      }\n      return 1;\n    },\n    pagesToDisplay() {\n      if (this.totalPages > 0 && this.totalPages < this.defaultPagesToDisplay) {\n        return this.totalPages;\n      }\n      return this.defaultPagesToDisplay;\n    },\n    minPage() {\n      if (this.value >= this.pagesToDisplay) {\n        const pagesToAdd = Math.floor(this.pagesToDisplay / 2);\n        const newMaxPage = pagesToAdd + this.value;\n        if (newMaxPage > this.totalPages) {\n          return this.totalPages - this.pagesToDisplay + 1;\n        }\n        return this.value - pagesToAdd;\n      } else {\n        return 1;\n      }\n    },\n    maxPage() {\n      if (this.value >= this.pagesToDisplay) {\n        const pagesToAdd = Math.floor(this.pagesToDisplay / 2);\n        const newMaxPage = pagesToAdd + this.value;\n        if (newMaxPage < this.totalPages) {\n          return newMaxPage;\n        } else {\n          return this.totalPages;\n        }\n      } else {\n        return this.pagesToDisplay;\n      }\n    }\n  },\n  data() {\n    return {\n      defaultPagesToDisplay: 5\n    };\n  },\n  methods: {\n    range(min, max) {\n      let arr = [];\n      for (let i = min; i <= max; i++) {\n        arr.push(i);\n      }\n      return arr;\n    },\n    changePage(item) {\n      this.$emit(\"input\", item);\n    },\n    nextPage() {\n      if (this.value < this.totalPages) {\n        this.$emit(\"input\", this.value + 1);\n      }\n    },\n    prevPage() {\n      if (this.value > 1) {\n        this.$emit(\"input\", this.value - 1);\n      }\n    }\n  },\n  watch: {\n    perPage() {\n      this.$emit(\"input\", 1);\n    },\n    total() {\n      this.$emit(\"input\", 1);\n    }\n  }\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}