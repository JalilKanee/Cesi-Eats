{"ast":null,"code":"import _objectSpread from \"C:/Users/Jalil/Desktop/V2.0/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\nimport noUiSlider from \"nouislider\";\nexport default {\n  name: \"slider\",\n  props: {\n    value: [String, Array, Number],\n    disabled: Boolean,\n    start: {\n      type: [Number, Array],\n      default: 0\n    },\n    connect: {\n      type: [Boolean, Array],\n      default: function _default() {\n        return [true, false];\n      }\n    },\n    range: {\n      type: Object,\n      default: function _default() {\n        return {\n          min: 0,\n          max: 100\n        };\n      }\n    },\n    type: {\n      type: String,\n      default: \"\"\n    },\n    options: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      slider: null\n    };\n  },\n  methods: {\n    createSlider: function createSlider() {\n      var _this = this;\n\n      noUiSlider.create(this.$el, _objectSpread({\n        start: this.value || this.start,\n        connect: this.connect,\n        range: this.range\n      }, this.options));\n      var slider = this.$el.noUiSlider;\n      slider.on(\"slide\", function () {\n        var value = slider.get();\n\n        if (value !== _this.value) {\n          _this.$emit(\"input\", value);\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.createSlider();\n  },\n  watch: {\n    value: function value(newValue, oldValue) {\n      var slider = this.$el.noUiSlider;\n      var sliderValue = slider.get();\n\n      if (newValue !== oldValue && sliderValue !== newValue) {\n        if (Array.isArray(sliderValue) && Array.isArray(newValue)) {\n          if (oldValue.length === newValue.length && oldValue.every(function (v, i) {\n            return v === newValue[i];\n          })) {\n            slider.set(newValue);\n          }\n        } else {\n          slider.set(newValue);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;AAIA;AAEA;EACAA,cADA;EAEAC;IACAC,8BADA;IAEAC,iBAFA;IAGAC;MACAC,qBADA;MAEAC;IAFA,CAHA;IAOAC;MACAF,sBADA;MAEAC;QAAA;MAAA;IAFA,CAPA;IAWAE;MACAH,YADA;MAEAC;QACA;UACAG,MADA;UAEAC;QAFA;MAIA;IAPA,CAXA;IAoBAL;MACAA,YADA;MAEAC;IAFA,CApBA;IAwBAK;MACAN,YADA;MAEAC;QACA;MACA;IAJA;EAxBA,CAFA;EAiCAM,IAjCA,kBAiCA;IACA;MACAC;IADA;EAGA,CArCA;EAsCAC;IACAC,YADA,0BACA;MAAA;;MACAC;QACAZ,+BADA;QAEAG,qBAFA;QAGAC;MAHA,GAIA,YAJA;MAMA;MACAK;QACA;;QACA;UACA;QACA;MACA,CALA;IAMA;EAfA,CAtCA;EAuDAI,OAvDA,qBAuDA;IACA;EACA,CAzDA;EA0DAC;IACAhB,KADA,iBACAiB,QADA,EACAC,QADA,EACA;MACA;MACA;;MACA;QACA;UACA,IACAA,uCACAA;YAAA;UAAA,EAFA,EAGA;YACAP;UACA;QACA,CAPA,MAOA;UACAA;QACA;MACA;IACA;EAhBA;AA1DA","names":["name","props","value","disabled","start","type","default","connect","range","min","max","options","data","slider","methods","createSlider","noUiSlider","mounted","watch","newValue","oldValue"],"sourceRoot":"src/components","sources":["Slider.vue"],"sourcesContent":["<template>\n  <div class=\"slider\" :class=\"[`slider-${type}`]\" :disabled=\"disabled\"></div>\n</template>\n<script>\nimport noUiSlider from \"nouislider\";\n\nexport default {\n  name: \"slider\",\n  props: {\n    value: [String, Array, Number],\n    disabled: Boolean,\n    start: {\n      type: [Number, Array],\n      default: 0\n    },\n    connect: {\n      type: [Boolean, Array],\n      default: () => [true, false]\n    },\n    range: {\n      type: Object,\n      default: () => {\n        return {\n          min: 0,\n          max: 100\n        };\n      }\n    },\n    type: {\n      type: String,\n      default: \"\"\n    },\n    options: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      slider: null\n    };\n  },\n  methods: {\n    createSlider() {\n      noUiSlider.create(this.$el, {\n        start: this.value || this.start,\n        connect: this.connect,\n        range: this.range,\n        ...this.options\n      });\n      const slider = this.$el.noUiSlider;\n      slider.on(\"slide\", () => {\n        let value = slider.get();\n        if (value !== this.value) {\n          this.$emit(\"input\", value);\n        }\n      });\n    }\n  },\n  mounted() {\n    this.createSlider();\n  },\n  watch: {\n    value(newValue, oldValue) {\n      const slider = this.$el.noUiSlider;\n      const sliderValue = slider.get();\n      if (newValue !== oldValue && sliderValue !== newValue) {\n        if (Array.isArray(sliderValue) && Array.isArray(newValue)) {\n          if (\n            oldValue.length === newValue.length &&\n            oldValue.every((v, i) => v === newValue[i])\n          ) {\n            slider.set(newValue);\n          }\n        } else {\n          slider.set(newValue);\n        }\n      }\n    }\n  }\n};\n</script>\n<style></style>\n"]},"metadata":{},"sourceType":"module"}