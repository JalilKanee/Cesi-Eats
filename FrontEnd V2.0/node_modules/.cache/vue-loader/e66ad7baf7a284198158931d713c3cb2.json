{"remainingRequest":"C:\\Users\\DELL\\Desktop\\Cesi-Eats\\FrontEnd V2.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\DELL\\Desktop\\Cesi-Eats\\FrontEnd V2.0\\src\\components\\Tabs.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\DELL\\Desktop\\Cesi-Eats\\FrontEnd V2.0\\src\\components\\Tabs.vue","mtime":1656670745453},{"path":"C:\\Users\\DELL\\Desktop\\Cesi-Eats\\FrontEnd V2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656671404342},{"path":"C:\\Users\\DELL\\Desktop\\Cesi-Eats\\FrontEnd V2.0\\node_modules\\babel-loader\\lib\\index.js","mtime":1656671396305},{"path":"C:\\Users\\DELL\\Desktop\\Cesi-Eats\\FrontEnd V2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656671404342},{"path":"C:\\Users\\DELL\\Desktop\\Cesi-Eats\\FrontEnd V2.0\\node_modules\\vue-loader\\lib\\index.js","mtime":1656671396869}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIHByb3BzOiB7DQogICAgZmxleENvbHVtbjogQm9vbGVhbiwNCiAgICBuYXZQaWxsc0ljb25zOiBCb29sZWFuLA0KICAgIHBsYWluOiBCb29sZWFuLA0KICAgIHRhYk5hbWU6IEFycmF5LA0KICAgIHRhYkljb246IEFycmF5LA0KICAgIGNvbG9yQnV0dG9uOiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICBkZWZhdWx0OiAiIg0KICAgIH0NCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgYWN0aXZlUGFuZWw6IHRoaXMudGFiTmFtZVswXQ0KICAgIH07DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBzd2l0Y2hQYW5lbChwYW5lbCkgew0KICAgICAgdGhpcy5hY3RpdmVQYW5lbCA9IHBhbmVsOw0KICAgIH0sDQogICAgaXNBY3RpdmVQYW5lbChwYW5lbCkgew0KICAgICAgcmV0dXJuIHRoaXMuYWN0aXZlUGFuZWwgPT0gcGFuZWw7DQogICAgfSwNCiAgICBnZXRDb2xvckJ1dHRvbjogZnVuY3Rpb24oY29sb3JCdXR0b24pIHsNCiAgICAgIHJldHVybiAibWQtIiArIGNvbG9yQnV0dG9uICsgIiI7DQogICAgfSwNCiAgICBnZXRUYWJDb250ZW50OiBmdW5jdGlvbihpbmRleCkgew0KICAgICAgcmV0dXJuICJ0YWItcGFuZS0iICsgaW5kZXggKyAiIjsNCiAgICB9DQogIH0NCn07DQo="},{"version":3,"sources":["Tabs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Tabs.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <md-card\r\n    class=\"md-card-tabs\"\r\n    :class=\"[\r\n      { 'flex-column': flexColumn },\r\n      { 'nav-pills-icons': navPillsIcons },\r\n      { 'md-card-plain': plain }\r\n    ]\"\r\n  >\r\n    <md-card-header slot=\"header-title\"> </md-card-header>\r\n\r\n    <md-card-content>\r\n      <md-list class=\"nav-tabs\">\r\n        <md-list-item\r\n          v-for=\"(item, index) in tabName\"\r\n          @click=\"switchPanel(tabName[index])\"\r\n          :key=\"item\"\r\n          :class=\"[\r\n            { active: isActivePanel(tabName[index]) },\r\n            { [getColorButton(colorButton)]: isActivePanel(tabName[index]) }\r\n          ]\"\r\n        >\r\n          {{ tabName[index] }}\r\n          <md-icon v-if=\"navPillsIcons\">{{ tabIcon[index] }}</md-icon>\r\n        </md-list-item>\r\n      </md-list>\r\n\r\n      <transition name=\"fade\" mode=\"out-in\">\r\n        <div class=\"tab-content\">\r\n          <div\r\n            :class=\"getTabContent(index + 1)\"\r\n            v-for=\"(item, index) in tabName\"\r\n            :key=\"item\"\r\n            v-if=\"isActivePanel(tabName[index])\"\r\n          >\r\n            <slot :name=\"getTabContent(index + 1)\">\r\n              This is the default text!\r\n            </slot>\r\n          </div>\r\n        </div>\r\n      </transition>\r\n    </md-card-content>\r\n  </md-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    flexColumn: Boolean,\r\n    navPillsIcons: Boolean,\r\n    plain: Boolean,\r\n    tabName: Array,\r\n    tabIcon: Array,\r\n    colorButton: {\r\n      type: String,\r\n      default: \"\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      activePanel: this.tabName[0]\r\n    };\r\n  },\r\n  methods: {\r\n    switchPanel(panel) {\r\n      this.activePanel = panel;\r\n    },\r\n    isActivePanel(panel) {\r\n      return this.activePanel == panel;\r\n    },\r\n    getColorButton: function(colorButton) {\r\n      return \"md-\" + colorButton + \"\";\r\n    },\r\n    getTabContent: function(index) {\r\n      return \"tab-pane-\" + index + \"\";\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"css\"></style>\r\n"]}]}